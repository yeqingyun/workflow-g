<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gionee.gniflow.integration.dao.BpmConfNodeDao">
  
  <sql id="columns">
    id, code, name, type, priority, assignee, due_date, conf_base_id,
	status, remark, create_by, create_time, update_by, update_time
  </sql>

  <resultMap type="com.gionee.gniflow.biz.model.BpmConfNode" id="result">
	<id property="id" column="id"/>
	<result property="code" column="code"/>
	<result property="name" column="name"/>
	<result property="type" column="type"/>
	<result property="priority" column="priority"/>
	<result property="assignee" column="assignee"/>
	<result property="dueDate" column="due_date"/>
	<result property="confBaseId" column="conf_base_id"/>
	<result property="status" column="status"/>
	<result property="remark" column="remark"/>
	<result property="createBy" column="create_by"/>
	<result property="createTime" column="create_time"/>
	<result property="updateBy" column="update_by"/>
	<result property="updateTime" column="update_time"/>
  </resultMap>
  
  <resultMap type="com.gionee.gniflow.dto.BpmConfNodeDto" id="joinResult" extends="result">
	<result property="processDefId" column="process_def_id"/>
	<result property="processDefKey" column="process_def_key"/>
	<result property="processDefVersion" column="process_def_version"/>
  </resultMap>

  <insert id="insert" parameterType="com.gionee.gniflow.biz.model.BpmConfNode">
    insert into bpm_conf_node (<include refid="columns"/>) values (
    #{nextId},
    #{code},
    #{name},
    #{type},
    #{priority},
    #{assignee},
    #{dueDate},
    #{confBaseId},
	#{normalStatus},
	#{remark,jdbcType=VARCHAR},
	#{currentAccount},
	#{currentTime},
	#{currentAccount},
	#{currentTime}
    )
  </insert>

  <update id="update" parameterType="com.gionee.gniflow.biz.model.BpmConfNode">
    update bpm_conf_node
    <set>
      <if test="code != null">
        code = #{code},
      </if>
      <if test="name != null">
        name = #{name},
      </if>
      <if test="type != null">
        type = #{type},
      </if>
      <if test="priority != null">
        priority = #{priority},
      </if>
      <if test="assignee != null">
        assignee = #{assignee},
      </if>
      <if test="dueDate != null">
        due_date = #{dueDate},
      </if>
      <if test="confBaseId != null">
        conf_base_id = #{confBaseId},
      </if>
      <if test="status != null">
        status = #{status},
      </if>
      <if test="remark != null">
        remark = #{remark},
      </if>
      update_by = #{currentAccount},
      update_time = #{currentTime}
    </set>
    where id = #{id}
  </update>

  <delete id="delete" parameterType="Integer">
	delete bpm_conf_node where id = #{_parameter}
  </delete>

  <select id="getAll" parameterType="map" resultMap="result">
	select <include refid="columns"/> from bpm_conf_node
	<where>
	  <if test="code != null">
        and code = #{code}
	  </if>
	  <if test="name != null">
        and name = #{name}
	  </if>
	  <if test="type != null">
        and type = #{type}
	  </if>
	  <if test="priority != null">
        and priority = #{priority}
	  </if>
	  <if test="assignee != null">
        and assignee = #{assignee}
	  </if>
	  <if test="dueDate != null">
        and due_date = #{dueDate}
	  </if>
	  <if test="confBaseId != null">
        and conf_base_id = #{confBaseId}
	  </if>
	</where>
  </select>

  <select id="getPage" parameterType="map" resultMap="result">
    SELECT SUB.* FROM ( select RES.* , row_number() over (ORDER BY id) rnk FROM (
      select <include refid="columns"/> from bpm_conf_node
      <where>
        <if test="code != null">
          and code = #{code}
        </if>
        <if test="name != null">
          and name = #{name}
        </if>
        <if test="type != null">
          and type = #{type}
        </if>
        <if test="priority != null">
          and priority = #{priority}
        </if>
        <if test="assignee != null">
          and assignee = #{assignee}
        </if>
        <if test="dueDate != null">
          and due_date = #{dueDate}
        </if>
        <if test="confBaseId != null">
          and conf_base_id = #{confBaseId}
        </if>
      </where>
    )RES ) SUB WHERE SUB.rnk &gt;= #{firstRow} AND SUB.rnk &lt; #{lastRow}
  </select>
  
  <select id="getPageCount" parameterType="map" resultType="int">
    select count(*) from bpm_conf_node
    <where>
      <if test="code != null">
        and code = #{code}
      </if>
      <if test="name != null">
        and name = #{name}
      </if>
      <if test="type != null">
        and type = #{type}
      </if>
      <if test="priority != null">
        and priority = #{priority}
      </if>
      <if test="assignee != null">
        and assignee = #{assignee}
      </if>
      <if test="dueDate != null">
        and due_date = #{dueDate}
      </if>
      <if test="confBaseId != null">
        and conf_base_id = #{confBaseId}
      </if>
    </where>
  </select>

  <select id="get" parameterType="Integer" resultMap="result">
	select <include refid="columns"/> from bpm_conf_node
	where id = #{_parameter}
  </select>
	
  <select id="joinQueryBpmConfNode" parameterType="map" resultMap="joinResult">
	select 
		node.*,base.process_def_id,base.process_def_key,base.process_def_version 
	from bpm_conf_node node
	left join bpm_conf_base base on node.conf_base_id = base.id
	<where>
	  <if test="code != null">
        and node.code = #{code}
	  </if>
	  <if test="name != null">
        and node.name = #{name}
	  </if>
	  <if test="type != null">
        and node.type = #{type}
	  </if>
	  <if test="priority != null">
        and node.priority = #{priority}
	  </if>
	  <if test="assignee != null">
        and node.assignee = #{assignee}
	  </if>
	  <if test="dueDate != null">
        and node.due_date = #{dueDate}
	  </if>
	  <if test="confBaseId != null">
        and node.conf_base_id = #{confBaseId}
	  </if>
	  <if test="processDefId != null">
	  	and base.process_def_id = #{processDefId}
	  </if>
	    and rownum = 1
   		order by node.conf_base_id desc
	</where>
  </select>
</mapper>
