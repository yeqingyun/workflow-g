<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gionee.gniflow.integration.dao.BpmConfNodeEmailDao">
  
  <sql id="columns">
    id, process_def_key, task_def_key, send_flag, addressee, conf_email_template_id,
	status, remark, create_by, create_time, update_by, update_time
  </sql>

  <resultMap type="com.gionee.gniflow.biz.model.BpmConfNodeEmail" id="result">
	<id property="id" column="id"/>
	<result property="processDefKey" column="process_def_key"/>
	<result property="taskDefKey" column="task_def_key"/>
	<result property="sendFlag" column="send_flag"/>
	<result property="addressee" column="addressee"/>
	<result property="confEmailTemplateId" column="conf_email_template_id"/>
	<result property="status" column="status"/>
	<result property="remark" column="remark"/>
	<result property="createBy" column="create_by"/>
	<result property="createTime" column="create_time"/>
	<result property="updateBy" column="update_by"/>
	<result property="templateId" column="temp_id"/>
	<result property="name" column="name"/>
	<result property="subject" column="subject"/>
	<result property="content" column="content"/>
  </resultMap>

  <insert id="insert" parameterType="com.gionee.gniflow.biz.model.BpmConfNodeEmail">
    insert into bpm_conf_node_email (<include refid="columns"/>) values (
    #{nextId},
    #{processDefKey},
    #{taskDefKey},
    #{sendFlag},
    #{addressee},
    #{confEmailTemplateId},
	#{normalStatus},
	#{remark,jdbcType=VARCHAR},
	#{currentAccount},
	#{currentTime},
	#{currentAccount},
	#{currentTime}
    )
  </insert>

  <update id="update" parameterType="com.gionee.gniflow.biz.model.BpmConfNodeEmail">
    update bpm_conf_node_email
    <set>
      <if test="processDefKey != null">
        process_def_key = #{processDefKey},
      </if>
      <if test="taskDefKey != null">
        task_def_key = #{taskDefKey},
      </if>
      <if test="sendFlag != null">
        send_flag = #{sendFlag},
      </if>
      <if test="addressee != null">
        addressee = #{addressee},
      </if>
      <if test="confEmailTemplateId != null">
        conf_email_template_id = #{confEmailTemplateId},
      </if>
      <if test="status != null">
        status = #{status},
      </if>
      <if test="remark != null">
        remark = #{remark},
      </if>
      update_by = #{currentAccount},
      update_time = #{currentTime}
    </set>
    where id = #{id}
  </update>

  <delete id="delete" parameterType="Integer">
	delete bpm_conf_node_email where id = #{_parameter}
  </delete>

  <select id="getAll" parameterType="map" resultMap="result">
	select e.*,t.id as temp_id,t.name,t.subject,t.content from bpm_conf_node_email e
	  left join bpm_email_template t on e.conf_email_template_id = t.id
	<where>
	  	<if test="processDefKey != null">
          and e.process_def_key = #{processDefKey}
        </if>
        <if test="taskDefKey != null">
          and e.task_def_key = #{taskDefKey}
        </if>
        <if test="sendFlag != null">
          and e.send_flag = #{sendFlag}
        </if>
        <if test="addressee != null">
          and e.addressee = #{addressee}
        </if>
        <if test="confEmailTemplateId != null">
          and e.conf_email_template_id = #{confEmailTemplateId}
        </if>
        <if test="name != null">
          and t.name like #{name} || '%'
        </if>
	</where>
  </select>

  <select id="getPage" parameterType="map" resultMap="result">
    SELECT SUB.* FROM ( select RES.* , row_number() over (ORDER BY id) rnk FROM (
      select e.*,t.id as temp_id,t.name,t.subject,t.content from bpm_conf_node_email e
	  left join bpm_email_template t on e.conf_email_template_id = t.id
      <where>
        <if test="processDefKey != null">
          and e.process_def_key = #{processDefKey}
        </if>
        <if test="taskDefKey != null">
          and e.task_def_key = #{taskDefKey}
        </if>
        <if test="sendFlag != null">
          and e.send_flag = #{sendFlag}
        </if>
        <if test="addressee != null">
          and e.addressee = #{addressee}
        </if>
        <if test="confEmailTemplateId != null">
          and e.conf_email_template_id = #{confEmailTemplateId}
        </if>
      </where>
    )RES ) SUB WHERE SUB.rnk &gt;= #{firstRow} AND SUB.rnk &lt; #{lastRow}
  </select>
  
  <select id="getPageCount" parameterType="map" resultType="int">
    select count(*) from bpm_conf_node_email e
	left join bpm_email_template t on e.conf_email_template_id = t.id
    <where>
      <if test="processDefKey != null">
          and e.process_def_key = #{processDefKey}
        </if>
        <if test="taskDefKey != null">
          and e.task_def_key = #{taskDefKey}
        </if>
        <if test="sendFlag != null">
          and e.send_flag = #{sendFlag}
        </if>
        <if test="addressee != null">
          and e.addressee = #{addressee}
        </if>
        <if test="confEmailTemplateId != null">
          and e.conf_email_template_id = #{confEmailTemplateId}
        </if>
    </where>
  </select>

  <select id="get" parameterType="Integer" resultMap="result">
	select <include refid="columns"/> from bpm_conf_node_email
	where id = #{_parameter}
  </select>

</mapper>
