<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gionee.gniflow.integration.dao.BpmProcessConfDao">
  
  <sql id="columns">
    id, process_name, process_def_key, sort,category_id,can_repeat,can_showInMobile,permission_crowd,
	status, remark, create_by, create_time, update_by, update_time
  </sql>

  <resultMap type="com.gionee.gniflow.biz.model.BpmProcessConf" id="result">
	<id property="id" column="id"/>
	<result property="processName" column="process_name"/>
	<result property="processDefKey" column="process_def_key"/>
	<result property="sort" column="sort"/>
	<result property="categoryId" column="category_id"/>
	<result property="canRepeat" column="can_repeat"/>
	<result property="canShowInMobile" column="can_showInMobile"/>
	<result property="permissionCrowd" column="permission_crowd"/>
	<result property="status" column="status"/>
	<result property="remark" column="remark"/>
	<result property="createBy" column="create_by"/>
	<result property="createTime" column="create_time"/>
	<result property="updateBy" column="update_by"/>
	<result property="updateTime" column="update_time"/>
  </resultMap>

  <insert id="insert" parameterType="com.gionee.gniflow.biz.model.BpmProcessConf">
    insert into bpm_process_conf (<include refid="columns"/>) values (
    #{nextId},
    #{processName},
    #{processDefKey},
    #{sort},
    #{categoryId},
    #{canRepeat},
    #{canShowInMobile},
    #{permissionCrowd},
	#{normalStatus},
	#{remark,jdbcType=VARCHAR},
	#{currentAccount},
	#{currentTime},
	#{currentAccount},
	#{currentTime}
    )
  </insert>

  <update id="update" parameterType="com.gionee.gniflow.biz.model.BpmProcessConf">
    update bpm_process_conf
    <set>
      <if test="processName != null">
        process_name = #{processName},
      </if>
      <if test="processDefKey != null">
        process_def_key = #{processDefKey},
      </if>
      <if test="sort != null">
        sort = #{sort},
      </if>
      <if test="status != null">
        status = #{status},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId},
      </if>
      <if test="canRepeat != null">
        can_repeat = #{canRepeat},
      </if>
      <if test="canShowInMobile != null">
        can_showInMobile = #{canShowInMobile},
      </if>
      <if test="permissionCrowd != null">
        permission_crowd = #{permissionCrowd},
      </if>
      <if test="remark != null">
        remark = #{remark},
      </if>
      update_by = #{currentAccount},
      update_time = #{currentTime}
    </set>
    where id = #{id}
  </update>

  <delete id="delete" parameterType="Integer">
	delete bpm_process_conf where id = #{_parameter}
  </delete>

  <select id="getAll" parameterType="map" resultMap="result">
	select <include refid="columns"/> from bpm_process_conf
	<where>
	  <if test="processName != null">
        and process_name = #{processName}
	  </if>
	  <if test="processDefKey != null">
        and process_def_key = #{processDefKey}
	  </if>
	  <if test="canRepeat != null">
        and can_repeat = #{canRepeat}
      </if>
      <if test="canShowInMobile != null">
       and can_showInMobile = #{canShowInMobile}
      </if>
      <if test="permissionCrowd != null">
        and permission_crowd = #{permissionCrowd}
      </if>
	  <if test="sort != null">
        and sort = #{sort}
	  </if>
	  <if test="categoryId != null">
        and category_id = #{categoryId}
      </if>
      <if test="status != null">
        and status = #{status}
      </if>
	</where>
  </select>
  
  <select id="getAuthority" parameterType="java.lang.String" resultType="java.lang.String">
  		select PERMISSION_CROWD from bpm_process_conf where PROCESS_NAME = #{processName}
  </select>

  <select id="getPage" parameterType="map" resultMap="result">
    SELECT SUB.* FROM ( select RES.* , row_number() over (ORDER BY id) rnk FROM (
      select <include refid="columns"/> from bpm_process_conf
      <where>
	    <if test="processName != null">
	      and process_name like '%'|| #{processName}||'%'
	    </if>
	    <if test="processDefKey != null">
	      and process_def_key like '%'|| #{processDefKey} ||'%'
	    </if>
        <if test="sort != null">
          and sort = #{sort}
        </if>
         <if test="categoryId != null">
       	 and category_id = #{categoryId}
     	 </if>
     	 <if test="canRepeat != null">
       	  and can_repeat = #{canRepeat}
      	 </if>
      	 <if test="canShowInMobile != null">
          and can_showInMobile = #{canShowInMobile}
      	</if>
      	 <if test="permissionCrowd != null">
        	and permission_crowd = #{permissionCrowd}
      	 </if>
 		<if test="status != null">
        	and status = #{status}
      </if>
      </where>
    )RES ) SUB WHERE SUB.rnk &gt;= #{firstRow} AND SUB.rnk &lt; #{lastRow}
  </select>
  <select id="getPageCount" parameterType="map" resultType="int">
    select count(*) from bpm_process_conf
    <where>
      <if test="processName != null">
        and process_name like '%'|| #{processName}||'%'
      </if>
      <if test="processDefKey != null">
        and process_def_key like '%'|| #{processDefKey} ||'%'
      </if>
      <if test="sort != null">
        and sort = #{sort}
      </if>
       <if test="categoryId != null">
        and category_id = #{categoryId}
      </if>
      <if test="canRepeat != null">
       	and can_repeat = #{canRepeat}
      </if>
      <if test="canShowInMobile != null">
          and can_showInMobile = #{canShowInMobile}
   	  </if>
      <if test="permissionCrowd != null">
        and permission_crowd = #{permissionCrowd}
      </if>
      <if test="status != null">
        and status = #{status}
      </if>
    </where>
  </select>

  <select id="get" parameterType="Integer" resultMap="result">
	select <include refid="columns"/> from bpm_process_conf
	where id = #{_parameter}
  </select>
  
  <select id="getByDefKey" parameterType="String" resultMap="result">
	select <include refid="columns"/> from bpm_process_conf
	where process_def_key = #{proDefKey}
  </select>

</mapper>
