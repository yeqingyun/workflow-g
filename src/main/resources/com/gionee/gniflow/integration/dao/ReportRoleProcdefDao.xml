<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gionee.gniflow.integration.dao.ReportRoleProcdefDao">
  
  <sql id="columns">
    ROLE_ID, PROCDEF_KEY,
	STATUS, REMARK, CREATE_BY, CREATE_TIME, UPDATE_BY, UPDATE_TIME
  </sql>

  <resultMap type="com.gionee.gniflow.biz.model.ReportRoleProcdef" id="result">
	<result property="roleId" column="ROLE_ID"/>
	<result property="procdefKey" column="PROCDEF_KEY"/>
	<result property="status" column="STATUS"/>
	<result property="remark" column="REMARK"/>
	<result property="createBy" column="CREATE_BY"/>
	<result property="createTime" column="CREATE_TIME"/>
	<result property="updateBy" column="UPDATE_BY"/>
	<result property="updateTime" column="UPDATE_TIME"/>
  </resultMap>

  <insert id="insert" parameterType="com.gionee.gniflow.biz.model.ReportRoleProcdef">
    insert into REPORT_ROLE_PROCDEF (<include refid="columns"/>) values (
    #{roleId},
    #{procdefKey},
	#{normalStatus},
	#{remark,jdbcType=VARCHAR},
	#{currentAccount},
	#{currentTime},
	#{currentAccount},
	#{currentTime}
    )
  </insert>

  <delete id="delete" parameterType="Integer">
	delete REPORT_ROLE_PROCDEF where ROLE_ID = #{_parameter}
  </delete>

  <select id="getAll" parameterType="map" resultMap="result">
	select <include refid="columns"/> from REPORT_ROLE_PROCDEF
	<where>
	  <if test="roleId != null">
        and ROLE_ID = #{roleId}
	  </if>
	  <if test="procdefKey != null">
        and PROCDEF_KEY = #{procdefKey}
	  </if>
	</where>
  </select>
  <!-- 找出用户角色所对应的流程定义KEY -->
  <select id="getUserProcessDefKey" parameterType="Integer" resultType="java.lang.String">
	select rp.procdef_key from bpm_user_role ur
	inner join bpm_role r on ur.role_id = r.id
	inner join report_role_procdef rp on r.id = rp.role_id
	where ur.user_id = #{userId}
	group by rp.procdef_key 
  </select>
  

</mapper>
