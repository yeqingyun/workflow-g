<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gionee.gniflow.integration.dao.ProAccountHandleInfoDao">
  
  <sql id="columns">
    id, start_user_account, start_user_name, process_inst_id, process_name, process_def_key, start_time, end_time,
	status, remark, create_by, create_time, update_by, update_time
  </sql>

  <resultMap type="com.gionee.gniflow.biz.model.ProAccountHandleInfo" id="result">
	<id property="id" column="id"/>
	<result property="startUserAccount" column="start_user_account"/>
	<result property="startUserName" column="start_user_name"/>
	<result property="processInstId" column="process_inst_id"/>
	<result property="processName" column="process_name"/>
	<result property="processDefKey" column="process_def_key"/>
	<result property="startTime" column="start_time"/>
	<result property="endTime" column="end_time"/>
	<result property="status" column="status"/>
	<result property="remark" column="remark"/>
	<result property="createBy" column="create_by"/>
	<result property="createTime" column="create_time"/>
	<result property="updateBy" column="update_by"/>
	<result property="updateTime" column="update_time"/>
  </resultMap>

  <insert id="insert" parameterType="com.gionee.gniflow.biz.model.ProAccountHandleInfo">
    insert into pro_account_handle_info (<include refid="columns"/>) values (
    #{nextId},
    #{startUserAccount},
    #{startUserName},
    #{processInstId},
    #{processName},
    #{processDefKey},
    #{startTime},
    #{endTime},
	#{normalStatus},
	#{remark,jdbcType=VARCHAR},
	#{currentAccount},
	#{currentTime},
	#{currentAccount},
	#{currentTime}
    )
  </insert>

  <update id="update" parameterType="com.gionee.gniflow.biz.model.ProAccountHandleInfo">
    update pro_account_handle_info
    <set>
      <if test="startUserAccount != null">
        start_user_account = #{startUserAccount},
      </if>
      <if test="startUserName != null">
        start_user_name = #{startUserName},
      </if>
      <if test="processInstId != null">
        process_inst_id = #{processInstId},
      </if>
      <if test="processName != null">
        process_name = #{processName},
      </if>
      <if test="processDefKey != null">
        process_def_key = #{processDefKey},
      </if>
      <if test="startTime != null">
        start_time = #{startTime},
      </if>
      <if test="endTime != null">
        end_time = #{endTime},
      </if>
      <if test="status != null">
        status = #{status},
      </if>
      <if test="remark != null">
        remark = #{remark},
      </if>
      update_by = #{currentAccount},
      update_time = #{currentTime}
    </set>
    where id = #{id}
  </update>

  <delete id="delete" parameterType="Integer">
	delete pro_account_handle_info where id = #{_parameter}
  </delete>

  <select id="getAll" parameterType="map" resultMap="result">
	select <include refid="columns"/> from pro_account_handle_info
	<where>
	  <if test="startUserAccount != null">
        and start_user_account = #{startUserAccount}
	  </if>
	  <if test="startUserName != null">
        and start_user_name = #{startUserName}
	  </if>
	  <if test="processInstId != null">
        and process_inst_id = #{processInstId}
	  </if>
	  <if test="processName != null">
        and process_name = #{processName}
	  </if>
	  <if test="processDefKey != null">
        and process_def_key = #{processDefKey}
	  </if>
	  <if test="startTime != null">
        and start_time = #{startTime}
	  </if>
	  <if test="endTime != null">
        and end_time = #{endTime}
	  </if>
	  <if test="status != null">
        and status = #{status}
      </if>
	</where>
  </select>

  <select id="getPage" parameterType="map" resultMap="result">
    SELECT SUB.* FROM ( select RES.* , row_number() over (ORDER BY id) rnk FROM (
      select <include refid="columns"/> from pro_account_handle_info
      <where>
        <if test="startUserAccount != null">
          and start_user_account = #{startUserAccount}
        </if>
        <if test="startUserName != null">
          and start_user_name = #{startUserName}
        </if>
        <if test="processInstId != null">
          and process_inst_id = #{processInstId}
        </if>
        <if test="processName != null">
          and process_name = #{processName}
        </if>
        <if test="processDefKey != null">
          and process_def_key = #{processDefKey}
        </if>
        <if test="startTime != null">
          and start_time = #{startTime}
        </if>
        <if test="endTime != null">
          and end_time = #{endTime}
        </if>
      </where>
    )RES ) SUB WHERE SUB.rnk &gt;= #{firstRow} AND SUB.rnk &lt; #{lastRow}
  </select>
  <select id="getPageCount" parameterType="map" resultType="int">
    select count(*) from pro_account_handle_info
    <where>
      <if test="startUserAccount != null">
        and start_user_account = #{startUserAccount}
      </if>
      <if test="startUserName != null">
        and start_user_name = #{startUserName}
      </if>
      <if test="processInstId != null">
        and process_inst_id = #{processInstId}
      </if>
      <if test="processName != null">
        and process_name = #{processName}
      </if>
      <if test="processDefKey != null">
        and process_def_key = #{processDefKey}
      </if>
      <if test="startTime != null">
        and start_time = #{startTime}
      </if>
      <if test="endTime != null">
        and end_time = #{endTime}
      </if>
    </where>
  </select>

  <select id="get" parameterType="Integer" resultMap="result">
	select <include refid="columns"/> from pro_account_handle_info
	where id = #{_parameter}
  </select>

</mapper>
